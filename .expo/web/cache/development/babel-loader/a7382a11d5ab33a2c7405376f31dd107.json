{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mohamed\\\\Desktop\\\\PROJET_PFE\\\\PFE\\\\app\\\\screens\\\\SportManager\\\\Example1.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Table, TableWrapper, Row, Cell } from 'react-native-table-component';\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\n\nvar ExampleFour = function (_Component) {\n  _inherits(ExampleFour, _Component);\n\n  var _super = _createSuper(ExampleFour);\n\n  function ExampleFour(props) {\n    var _this;\n\n    _classCallCheck(this, ExampleFour);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      tableHead: ['Nom', 'Cond.Phy', 'vitesse', 'Poids', 'Delete'],\n      tableData: [['Akacha', '+4%', '-3%', '-4%', '5'], ['aAkacha', '+4%', '-3%', '-4%', '5'], ['1Akacha', '+4%', '-3%', '-4%', '5'], ['aAkacha', '+4%', '-3%', '-4%', '5'], ['1Akacha', '+4%', '-3%', '-4%', '5'], ['aAkacha', '+4%', '-3%', '-4%', '5'], ['1Akacha', '+4%', '-3%', '-4%', '5'], ['1Akacha', '+4%', '-3%', '-4%', '5'], ['aAkacha', '+4%', '-3%', '-4%', '5'], ['1Akacha', '+4%', '-3%', '-4%', '5'], ['aAkacha', '+4%', '-3%', '-4%', '5']]\n    };\n    return _this;\n  }\n\n  _createClass(ExampleFour, [{\n    key: \"_alertIndex\",\n    value: function _alertIndex(index) {\n      Alert.alert(\"This is row \" + (index + 1));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var state = this.state;\n\n      var element = function element() {\n        return React.createElement(TouchableOpacity, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 7\n          }\n        }, React.createElement(View, {\n          style: {\n            width: 70,\n            paddingBottom: 8,\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 7\n          }\n        }, React.createElement(MaterialCommunityIcons, {\n          name: \"account-edit\",\n          size: 35,\n          color: \"#000\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 9\n          }\n        })));\n      };\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }\n      }, React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }, React.createElement(Table, {\n        borderStyle: {\n          borderColor: 'transparent'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }, React.createElement(Row, {\n        data: state.tableHead,\n        style: styles.head,\n        textStyle: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      }), state.tableData.map(function (rowData, index) {\n        return React.createElement(TableWrapper, {\n          key: index,\n          style: styles.row,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }\n        }, rowData.map(function (cellData, cellIndex) {\n          return React.createElement(Cell, {\n            key: cellIndex,\n            data: cellIndex === 4 ? element(cellData, index) : cellData,\n            textStyle: styles.text,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 21\n            }\n          });\n        }));\n      }))));\n    }\n  }]);\n\n  return ExampleFour;\n}(Component);\n\nexport { ExampleFour as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    paddingTop: 30,\n    backgroundColor: '#fff'\n  },\n  head: {\n    height: 80,\n    backgroundColor: '#808B97'\n  },\n  text: {\n    margin: 10\n  },\n  row: {\n    flexDirection: 'row',\n    backgroundColor: '#FFF1C1'\n  },\n  btn: {\n    width: 58,\n    height: 18,\n    backgroundColor: '#78B7BB',\n    borderRadius: 2\n  },\n  btnText: {\n    textAlign: 'center',\n    color: '#fff'\n  }\n});","map":{"version":3,"sources":["C:/Users/Mohamed/Desktop/PROJET_PFE/PFE/app/screens/SportManager/Example1.js"],"names":["React","Component","ScrollView","Table","TableWrapper","Row","Cell","MaterialCommunityIcons","ExampleFour","props","state","tableHead","tableData","index","Alert","alert","element","width","paddingBottom","justifyContent","alignItems","styles","container","borderColor","head","text","map","rowData","row","cellData","cellIndex","StyleSheet","create","flex","padding","paddingTop","backgroundColor","height","margin","flexDirection","btn","borderRadius","btnText","textAlign","color"],"mappings":"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","sourcesContent":[" import React, { Component } from 'react';\nimport { StyleSheet, View, Text, TouchableOpacity, Alert , TouchableWithoutFeedback} from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Table, TableWrapper, Row, Cell } from 'react-native-table-component';\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\n \nexport default class ExampleFour extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tableHead: ['Nom', 'Cond.Phy', 'vitesse', 'Poids', 'Delete'],\n      tableData: [\n        ['Akacha', '+4%', '-3%', '-4%', '5'],\n        ['aAkacha', '+4%', '-3%', '-4%', '5'],\n        ['1Akacha', '+4%', '-3%', '-4%', '5'],\n        ['aAkacha','+4%', '-3%', '-4%', '5'],\n        ['1Akacha', '+4%', '-3%', '-4%', '5'],\n        ['aAkacha', '+4%', '-3%', '-4%', '5'],\n        ['1Akacha', '+4%', '-3%', '-4%', '5'],\n        ['1Akacha', '+4%', '-3%', '-4%', '5'],\n        ['aAkacha','+4%', '-3%', '-4%', '5'],\n        ['1Akacha', '+4%', '-3%', '-4%', '5'],                     \n        ['aAkacha','+4%', '-3%', '-4%', '5']\n      ]\n    }\n  }\n \n  _alertIndex(index) {\n    Alert.alert(`This is row ${index + 1}`);\n  }\n \n  render() {\n    const state = this.state;\n    const element = () => (\n      <TouchableOpacity >\n      <View style={{\n          width: 70,\n          paddingBottom: 8,\n          justifyContent: \"center\",\n          alignItems: \"center\",}}>\n        <MaterialCommunityIcons\n          name=\"account-edit\"\n          size={35}\n          color=\"#000\"\n        />\n\n      </View>\n    </TouchableOpacity>\n    );\n    \n \n    return (\n      <View style={styles.container}>\n        <ScrollView>\n        <Table borderStyle={{borderColor: 'transparent'}}>\n          <Row data={state.tableHead} style={styles.head} textStyle={styles.text}/>\n          {\n            state.tableData.map((rowData, index) => (\n              \n              <TableWrapper key={index} style={styles.row}>\n                {\n                  rowData.map((cellData, cellIndex) => (\n                    <Cell key={cellIndex} data={cellIndex === 4 ? element(cellData, index) : cellData} textStyle={styles.text}/>\n                    \n                  ))\n                  \n                }\n              </TableWrapper>\n              \n              \n            ))\n            \n          }\n           \n        </Table>\n        </ScrollView>\n      </View>\n    )\n  }\n}\n \nconst styles = StyleSheet.create({\n  container: { flex: 1, padding: 16, paddingTop: 30, backgroundColor: '#fff' },\n  head: { height: 80, backgroundColor: '#808B97' },\n  text: { margin: 10 },\n  row: { flexDirection: 'row', backgroundColor: '#FFF1C1' },\n  btn: { width: 58, height: 18, backgroundColor: '#78B7BB',  borderRadius: 2 },\n  btnText: { textAlign: 'center', color: '#fff' }\n}); \n//exemple2\n/* import React, { Component } from 'react';\nimport { StyleSheet, View, ScrollView } from 'react-native';\nimport { Table, TableWrapper, Row } from 'react-native-table-component';\n \nexport default class ExampleThree extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tableHead: ['Nom', 'Eval2', 'Eval3', 'Eval4', 'Eval5', 'Eval6', 'Eval7', 'Update', 'Delete'],\n      widthArr: [\n        ['akacha', '+4%' , '-4%', '+4%' , '-4%', '+4%' , '-4%'],\n        ['akacha', '+4%' , '-4%', '+4%' , '-4%', '+4%' , '-4%'],\n        ['akacha', '+4%' , '-4%', '+4%' , '-4%', '+4%' , '-4%'],\n        ['akacha', '+4%' , '-4%', '+4%' , '-4%', '+4%' , '-4%'],\n        ['akacha', '+4%' , '-4%', '+4%' , '-4%', '+4%' , '-4%']\n      ]\n    }\n  }\n \n  render() {\n    const state = this.state;\n    const tableData = [];\n    for (let i = 0; i < 30; i += 1) {\n      const rowData = [];\n      for (let j = 0; j < 9; j += 1) {\n        rowData.push(`${i}${j}`);\n      }\n      tableData.push(rowData);\n    }\n \n    return (\n      <View style={styles.container}>\n        <ScrollView horizontal={true}>\n          <View>\n            <Table borderStyle={{borderColor: '#C1C0B9'}}>\n              <Row data={state.tableHead} widthArr={state.widthArr} style={styles.header} textStyle={styles.text}/>\n            </Table>\n            <ScrollView style={styles.dataWrapper}>\n              <Table borderStyle={{borderColor: '#C1C0B9'}}>\n                {\n                  tableData.map((rowData, index) => (\n                    <Row\n                      key={index}\n                      data={rowData}\n                      widthArr={state.widthArr}\n                      style={[styles.row, index%2 && {backgroundColor: '#F7F6E7'}]}\n                      textStyle={styles.text}\n                    />\n                  ))\n                }\n              </Table>\n            </ScrollView>\n          </View>\n        </ScrollView>\n      </View>\n    )\n  }\n}\n \nconst styles = StyleSheet.create({\n  container: { flex: 1, padding: 16, paddingTop: 30, backgroundColor: '#fff' },\n  header: { height: 50, backgroundColor: '#537791' },\n  text: { textAlign: 'center', fontWeight: '100' },\n  dataWrapper: { marginTop: -1 },\n  row: { height: 40, backgroundColor: '#E7E6E1' }\n}); */"]},"metadata":{},"sourceType":"module"}