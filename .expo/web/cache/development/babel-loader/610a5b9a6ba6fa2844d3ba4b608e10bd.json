{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mohamed\\\\Desktop\\\\PROJET_PFE\\\\PFE\\\\app\\\\screens\\\\SportManager\\\\Specialite.js\";\nimport React, { useState, useEffect } from \"react\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Screen from \"../../components/Screen\";\nimport ListItem from \"../../components/ListItem\";\nimport ListItemSeparator from \"../../components/ListItemSeparator\";\nimport ListItemDeleteAction from \"../../components/ListItemDeleteAction\";\nimport ListItemUpdatAction from \"../../components/ListItemUpdatAction\";\nimport colors from \"../../config/colors\";\nimport { DataImport } from \"../../api/database/affichage\";\nimport { DeleteData } from \"../../api/database/suppression\";\n\nvar wait = function wait(timeout) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, timeout);\n  });\n};\n\nvar buttonClickded = function buttonClickded() {\n  Alert.alert(\"Alert nom\", \"Alert Msg\", [{\n    text: \"Later\",\n    onPress: function onPress() {\n      return console.log(\"later pressed\");\n    }\n  }, {\n    text: \"Cancel\",\n    onPress: function onPress() {\n      return console.log(\"Cancel Pressed\");\n    },\n    style: \"cancel\"\n  }, {\n    text: \"OK\",\n    onPress: function onPress() {\n      return console.log(\"OK Pressed\");\n    }\n  }], {\n    cancelable: false\n  });\n};\n\nvar Specialite = function Specialite(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      data1 = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      refreshing = _useState4[0],\n      setRefreshing = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var onRefresh = React.useCallback(function () {\n    var datum = DataImport(\"specialite\").then(function (ee) {\n      setData(ee);\n      setRefreshing(false);\n      setRefreshing(false);\n    });\n  }, []);\n\n  var handleDelete = function handleDelete(data) {\n    var x = DeleteData(\"specialite\", data).then(function (reponse) {\n      Alert.alert(\"\", \"Specialite supprimé avec succès\", [{\n        text: \"OK\"\n      }], {\n        cancelable: false\n      });\n      onRefresh();\n    });\n  };\n\n  useEffect(function () {\n    function fetchData() {\n      var contenu = DataImport(\"specialite\");\n      return contenu;\n    }\n\n    try {\n      setLoading(true);\n      var datum = fetchData().then(function (ee) {\n        setData(ee);\n        setRefreshing(false);\n      });\n    } catch (error) {}\n  }, []);\n\n  if (loading) {\n    setLoading(false);\n    setRefreshing(false);\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, \"Loading\"));\n  }\n\n  if (!data1 || data1.length == 0) {\n    return React.createElement(Screen, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, \"Aucun Specialite dans la base de donn\\xE9es\")), React.createElement(ScrollView, {\n      refreshControl: React.createElement(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }), React.createElement(TouchableOpacity, {\n      activeOpacity: 1.0,\n      onPress: function onPress() {\n        return props.navigation.navigate(\"Update_spec\");\n      },\n      style: styles.touchableOpacityStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      source: require(\"../../assets/addbtn.png\"),\n      style: styles.floatingButtonStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  return React.createElement(Screen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 1\n    }\n  }, React.createElement(ScrollView, {\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: onRefresh,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 31\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 3\n    }\n  }, React.createElement(FlatList, {\n    data: data1,\n    keyExtractor: function keyExtractor(dat) {\n      return dat.id.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(ListItem, {\n        nom: item.nom,\n        nbr_max_g: item.nombre,\n        image: require(\"../../assets/User2.jpg\"),\n        renderRightActions: function renderRightActions() {\n          return React.createElement(View, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }\n          }, React.createElement(ListItemDeleteAction, {\n            onPress: function onPress() {\n              return handleDelete(item);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 18\n            }\n          }), React.createElement(ListItemSeparator, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 16\n            }\n          }), React.createElement(ListItemUpdatAction, {\n            onPress: function onPress() {\n              return props.navigation.navigate(\"Update_spec\", {\n                item: item\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 16\n            }\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }\n      });\n    },\n    ItemSeparatorComponent: ListItemSeparator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  })), React.createElement(TouchableOpacity, {\n    activeOpacity: 1.0,\n    onPress: function onPress() {\n      return props.navigation.navigate(\"Update_spec\");\n    },\n    style: styles.touchableOpacityStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/addbtn.png\"),\n    style: styles.floatingButtonStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  touchableOpacityStyle: {\n    position: 'absolute',\n    width: 50,\n    height: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    right: 30,\n    bottom: 30\n  },\n  floatingButtonStyle: {\n    resizeMode: 'contain',\n    width: 50,\n    height: 50\n  }\n});\nexport default Specialite;","map":{"version":3,"sources":["C:/Users/Mohamed/Desktop/PROJET_PFE/PFE/app/screens/SportManager/Specialite.js"],"names":["React","useState","useEffect","Screen","ListItem","ListItemSeparator","ListItemDeleteAction","ListItemUpdatAction","colors","DataImport","DeleteData","wait","timeout","Promise","resolve","setTimeout","buttonClickded","Alert","alert","text","onPress","console","log","style","cancelable","Specialite","props","data1","setData","refreshing","setRefreshing","loading","setLoading","onRefresh","useCallback","datum","then","ee","handleDelete","data","x","reponse","fetchData","contenu","error","length","navigation","navigate","styles","touchableOpacityStyle","require","floatingButtonStyle","dat","id","toString","item","nom","nombre","StyleSheet","create","position","width","height","alignItems","justifyContent","right","bottom","resizeMode"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport { RefreshControl,Alert, FlatList, StyleSheet, Text, View , TouchableOpacity ,Image,ScrollView, Button } from \"react-native\";\r\n\r\nimport Screen from \"../../components/Screen\";\r\nimport ListItem from \"../../components/ListItem\";\r\nimport ListItemSeparator from \"../../components/ListItemSeparator\";\r\nimport ListItemDeleteAction from \"../../components/ListItemDeleteAction\";\r\nimport ListItemUpdatAction from \"../../components/ListItemUpdatAction\";\r\nimport colors from \"../../config/colors\";\r\nimport {DataImport} from '../../api/database/affichage'\r\nimport {DeleteData} from '../../api/database/suppression'\r\nconst wait = (timeout) => {\r\n  return new Promise(resolve => setTimeout(resolve, timeout));\r\n}\r\n\r\nconst buttonClickded = () => {\r\n    Alert.alert(\r\n      \"Alert nom\",\r\n      \"Alert Msg\",\r\n      [\r\n        { text: \"Later\", onPress: () => console.log(\"later pressed\") },\r\n        {\r\n          text: \"Cancel\",\r\n          onPress: () => console.log(\"Cancel Pressed\"),\r\n          style: \"cancel\"\r\n        },\r\n        { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n      ],\r\n      { cancelable: false }\r\n    );\r\n};\r\nconst Specialite=(props)=> {\r\n \r\n  //state management\r\n  const [data1, setData] = useState(null);\r\n  const [refreshing, setRefreshing] = useState(true);\r\n  const [loading, setLoading] = useState(true);\r\n  const onRefresh = React.useCallback(() => {\r\n  //Importation de données apres refresh \r\n  const datum =  DataImport(\"specialite\").then((ee)=>{\r\n      setData(ee);\r\n      setRefreshing(false);\r\n      setRefreshing(false)\r\n    })\r\n    \r\n  }, []);\r\n  // Suppression d'un entraineur\r\n   const handleDelete = (data) => {    \r\n    const x=DeleteData(\"specialite\",data).then((reponse)=>{ \r\n      Alert.alert(\r\n        \"\",\r\n        \"Specialite supprimé avec succès\",\r\n        [\r\n          { text: \"OK\"}\r\n        ],\r\n        { cancelable: false }\r\n      );\r\n    onRefresh()  \r\n    })\r\n  }; \r\n  useEffect( () => {\r\n    function fetchData() {\r\n        const contenu=  DataImport(\"specialite\");\r\n        return contenu\r\n    }\r\n    try {\r\n     setLoading(true);\r\n      const datum =  fetchData().then((ee)=>{\r\n        setData(ee);        \r\n        setRefreshing(false)\r\n      })      \r\n    } catch (error) {      \r\n    }\r\n }, []);\r\n\r\n if(loading)\r\n {\r\n  setLoading(false);\r\n  setRefreshing(false)\r\n  return (\r\n    <View><Text>Loading</Text></View>\r\n );\r\n }\r\n if (!data1 || data1.length==0)\r\n {\r\n  return (\r\n    <Screen>\r\n      <View><Text>Aucun Specialite dans la base de données</Text></View>\r\n      <ScrollView refreshControl={\r\n        <RefreshControl\r\n          refreshing={refreshing}\r\n          onRefresh={onRefresh}\r\n        />\r\n      } > \r\n      </ScrollView>\r\n      <TouchableOpacity\r\n      \r\n          activeOpacity={1.0}\r\n          onPress={()=>props.navigation.navigate(\"Update_spec\")}\r\n          style={styles.touchableOpacityStyle}>\r\n          <Image\r\n            source={require('../../assets/addbtn.png')}\r\n            style={styles.floatingButtonStyle}\r\n          />\r\n        </TouchableOpacity> \r\n    </Screen>\r\n    );\r\n }\r\nreturn (\r\n<Screen>\r\n  <ScrollView refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh}/>}> \r\n    <FlatList       \r\n        data={data1}\r\n        keyExtractor={(dat) => dat.id.toString()}\r\n        renderItem={({ item }) => (\r\n          <ListItem\r\n            nom={item.nom }\r\n           \r\n            nbr_max_g={item.nombre}\r\n            image={require(\"../../assets/User2.jpg\")}\r\n            renderRightActions={() => (   \r\n              <View> \r\n                 <ListItemDeleteAction \r\n                 onPress={() =>handleDelete(item)}\r\n               />\r\n               <ListItemSeparator/>\r\n               <ListItemUpdatAction \r\n                 onPress={() =>props.navigation.navigate(\"Update_spec\",{item:item})}\r\n               />\r\n               </View>\r\n            )}\r\n          />\r\n        )}\r\n        ItemSeparatorComponent={ListItemSeparator}\r\n        \r\n      />\r\n      </ScrollView>\r\n      <TouchableOpacity\r\n      \r\n          activeOpacity={1.0}\r\n          onPress={()=>props.navigation.navigate(\"Update_spec\")}\r\n          style={styles.touchableOpacityStyle}>\r\n          <Image\r\n            source={require('../../assets/addbtn.png')}\r\n            style={styles.floatingButtonStyle}\r\n          />\r\n        </TouchableOpacity> \r\n    </Screen>\r\n  );    \r\n}\r\nconst styles = StyleSheet.create({\r\n    touchableOpacityStyle: {\r\n        position: 'absolute',\r\n        width: 50,\r\n        height: 50,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        right: 30,\r\n        bottom: 30,\r\n     },   \r\n     floatingButtonStyle: {\r\n        resizeMode: 'contain',\r\n        width: 50,\r\n        height: 50\r\n      }\r\n});\r\n\r\nexport default Specialite;"]},"metadata":{},"sourceType":"module"}