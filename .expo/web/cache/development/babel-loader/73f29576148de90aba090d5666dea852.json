{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mohamed\\\\Desktop\\\\PROJET_PFE\\\\PFE\\\\app\\\\screens\\\\Administrator\\\\Update_par.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport * as Yup from \"yup\";\nimport { Form, FormField, SubmitButton } from \"../../components/forms\";\nimport { AddData } from \"../../api/database/insertion\";\nimport { UpdateData } from \"../../api/database/miseajour\";\nvar styles = StyleSheet.create({\n  container: {\n    padding: 10\n  }\n});\nvar validationSchema = Yup.object().shape({\n  name: Yup.string().required().min(10).label(\"Nom\"),\n  surname: Yup.string().required().min(1).max(10000).label(\"Prénom\"),\n  email: Yup.string().email().required().label(\"Email\"),\n  phone: Yup.string().required().label(\"Téléphone\"),\n  namec: Yup.string().required().min(10).label(\"Nomc\"),\n  phonec: Yup.string().required().label(\"Téléphonec\")\n});\n\nfunction getID(val, jsl) {\n  var needle = val;\n  var ret = 0;\n\n  for (var i = 0; i < jsl.length; i++) {\n    if (jsl[i].label.toLowerCase() == needle.toLowerCase()) {\n      ret = jsl[i].value;\n    }\n  }\n\n  return ret;\n}\n\nfunction storeUser(table, id, pl, operation, v) {\n  var contenu = \"\";\n  console.log(v);\n\n  if (operation == \"Ajouter\") {\n    contenu = AddData(\"parents\", id, pl).then(function (reponse) {});\n  } else {\n    contenu = UpdateData(\"parents\", id, pl).then(function (reponse) {});\n  }\n}\n\nvar Updat_par = function Updat_par(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var op = \"Ajouter\";\n  var Nom = \"\";\n  var Prenom = \"\";\n  var Mail = \"\";\n  var Tel = \"\";\n  var Nomc = \"\";\n  var Telc = \"\";\n\n  if (route.params) {\n    item = route.params.item;\n    op = \"Modifier\";\n    Nom = item.nom;\n    Prenom = item.prenom;\n    Mail = item.mail;\n    Tel = item.tel;\n    Nomc = item.nomc;\n    Telc = item.telc;\n  }\n\n  var _useState = useState(Nom),\n      _useState2 = _slicedToArray(_useState, 2),\n      nom = _useState2[0],\n      setNom = _useState2[1];\n\n  var _useState3 = useState(Prenom),\n      _useState4 = _slicedToArray(_useState3, 2),\n      prenom = _useState4[0],\n      setPrenom = _useState4[1];\n\n  var _useState5 = useState(Mail),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mail = _useState6[0],\n      setMail = _useState6[1];\n\n  var _useState7 = useState(Tel),\n      _useState8 = _slicedToArray(_useState7, 2),\n      tel = _useState8[0],\n      setTel = _useState8[1];\n\n  var _useState9 = useState(Nomc),\n      _useState10 = _slicedToArray(_useState9, 2),\n      nomc = _useState10[0],\n      setNomc = _useState10[1];\n\n  var _useState11 = useState(Telc),\n      _useState12 = _slicedToArray(_useState11, 2),\n      telc = _useState12[0],\n      setTelc = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      operation = _useState14[0],\n      setOperation = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      error = _useState16[0],\n      setError = _useState16[1];\n\n  var item = null;\n  return React.createElement(Form, {\n    initialValues: {\n      name: {\n        Nom: Nom\n      },\n      surname: {\n        Prenom: Prenom\n      },\n      email: {\n        Mail: Mail\n      },\n      phone: {\n        Tel: Tel\n      },\n      namec: {\n        Nomc: Nomc\n      },\n      phonec: {\n        Telc: Telc\n      }\n    },\n    onSubmit: function onSubmit(values) {\n      return storeUser(\"parents\", mail, {\n        nom: nom,\n        prenom: prenom,\n        mail: mail,\n        tel: tel,\n        nomc: nomc,\n        telc: telc\n      }, op, values);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, React.createElement(FormField, {\n    maxLength: 20,\n    name: \"name\",\n    placeholder: \"Nom\",\n    defaultValue: Nom,\n    onChangeText: setNom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }), React.createElement(FormField, {\n    maxLength: 8,\n    name: \"surname\",\n    placeholder: \"Pr\\xE9nom\",\n    defaultValue: Prenom,\n    onChangeText: setPrenom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }), React.createElement(FormField, {\n    maxLength: 40,\n    name: \"email\",\n    placeholder: \"Email\",\n    defaultValue: Mail,\n    onChangeText: setMail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 10\n    }\n  }), React.createElement(FormField, {\n    maxLength: 8,\n    name: \"phone\",\n    placeholder: \"T\\xE9l\\xE9phone\",\n    defaultValue: Tel,\n    onChangeText: setTel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }), React.createElement(FormField, {\n    maxLength: 20,\n    name: \"namec\",\n    placeholder: \"Nom conjoin\",\n    defaultValue: Nomc,\n    onChangeText: setNomc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 12\n    }\n  }), React.createElement(FormField, {\n    maxLength: 8,\n    name: \"phonec\",\n    placeholder: \"T\\xE9l\\xE9phone conjoin\",\n    defaultValue: Telc,\n    onChangeText: setTelc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }), React.createElement(SubmitButton, {\n    title: op,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Updat_par;","map":{"version":3,"sources":["C:/Users/Mohamed/Desktop/PROJET_PFE/PFE/app/screens/Administrator/Update_par.js"],"names":["React","useState","Yup","Form","FormField","SubmitButton","AddData","UpdateData","styles","StyleSheet","create","container","padding","validationSchema","object","shape","name","string","required","min","label","surname","max","email","phone","namec","phonec","getID","val","jsl","needle","ret","i","length","toLowerCase","value","storeUser","table","id","pl","operation","v","contenu","console","log","then","reponse","Updat_par","route","navigation","op","Nom","Prenom","Mail","Tel","Nomc","Telc","params","item","nom","prenom","mail","tel","nomc","telc","setNom","setPrenom","setMail","setTel","setNomc","setTelc","setOperation","error","setError","values"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { StyleSheet,Text } from \"react-native\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Form,\r\n  FormField,\r\n  \r\n  SubmitButton,\r\n} from \"../../components/forms\";\r\nimport {AddData} from '../../api/database/insertion';\r\nimport {UpdateData} from '../../api/database/miseajour';\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 10,\r\n  },\r\n});\r\nconst validationSchema = Yup.object().shape({\r\nname: Yup.string().required().min(10).label(\"Nom\"),\r\nsurname: Yup.string().required().min(1).max(10000).label(\"Prénom\"),\r\nemail: Yup.string().email().required().label(\"Email\"),\r\nphone:Yup.string().required().label(\"Téléphone\"),\r\nnamec: Yup.string().required().min(10).label(\"Nomc\"),\r\nphonec:Yup.string().required().label(\"Téléphonec\"),\r\n});\r\nfunction getID(val,jsl)\r\n{\r\n  var needle = val;\r\nvar ret=0;\r\n// iterate over each element in the array\r\nfor (var i = 0; i < jsl.length; i++){\r\n  // look for the entry with a matching `code` value\r\n  if (jsl[i].label.toLowerCase() == needle.toLowerCase()){\r\n     ret=jsl[i].value\r\n  }\r\n}\r\nreturn ret\r\n}\r\n//---------------------------------------------------\r\nfunction storeUser(table,id,pl,operation,v) {\r\n  var contenu=\"\"\r\n  console.log(v)\r\n  if(operation==\"Ajouter\")\r\n  {    \r\n     contenu=  AddData(\"parents\",id,pl).then((reponse)=>{\r\n   \r\n     })\r\n  } \r\n  else\r\n  {\r\n    contenu=  UpdateData(\"parents\",id,pl).then((reponse)=>{    \r\n    })\r\n  }\r\n}\r\n  \r\n\r\n\r\nconst Updat_par = ({ route , navigation}) => {\r\nvar op=\"Ajouter\";\r\n\r\nvar Nom=\"\";\r\nvar Prenom=\"\";\r\nvar Mail=\"\";\r\nvar Tel=\"\";\r\nvar Nomc=\"\";\r\nvar Telc=\"\";\r\n\r\n\r\nif(route.params)\r\n   {\r\n     item = route.params.item;\r\n     op=\"Modifier\";\r\n     \r\n     \r\n     Nom=item.nom;\r\n     \r\n     Prenom=item.prenom;\r\n     Mail=item.mail;\r\n     Tel=item.tel;\r\n     Nomc=item.nomc;\r\n     Telc=item.telc;\r\n     \r\n}\r\n  \r\n\r\n\r\nconst [nom, setNom] = useState(Nom);\r\nconst [prenom, setPrenom] = useState(Prenom);\r\nconst [mail, setMail] = useState(Mail);\r\nconst [tel, setTel] = useState(Tel);\r\nconst [nomc, setNomc] = useState(Nomc);\r\nconst [telc, setTelc] = useState(Telc);\r\nconst [operation, setOperation] = useState();\r\nconst [error, setError] = useState('');\r\nlet item = null\r\n\r\n\r\n   \r\n\r\n  return ( \r\n    \r\n     \r\n      <Form\r\n        initialValues={{\r\n          name:{Nom},\r\n          surname:{Prenom} ,\r\n          email: {Mail},\r\n          phone: {Tel},\r\n          namec:{Nomc},\r\n          phonec: {Telc},\r\n          \r\n        }}\r\n\r\n        onSubmit={(values) => storeUser(\"parents\",mail,{nom:nom,prenom:prenom,mail:mail,tel:tel,nomc:nomc,telc:telc},op,values)}\r\n       \r\n      >\r\n        <FormField\r\n          maxLength={20}\r\n          name=\"name\"\r\n          placeholder=\"Nom\"\r\n          defaultValue={Nom}\r\n          onChangeText={setNom}/>\r\n        <FormField          \r\n          maxLength={8}\r\n          name=\"surname\"\r\n          placeholder=\"Prénom\"\r\n          defaultValue={Prenom}\r\n          onChangeText={setPrenom}\r\n        />\r\n         <FormField          \r\n          maxLength={40}\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          defaultValue={Mail}\r\n          onChangeText={setMail}\r\n          />\r\n        <FormField\r\n          maxLength={8}\r\n          name=\"phone\"\r\n          placeholder=\"Téléphone\"\r\n          defaultValue={Tel}\r\n          onChangeText={setTel}          \r\n          /> \r\n           <FormField\r\n          maxLength={20}\r\n          name=\"namec\"\r\n          placeholder=\"Nom conjoin\"\r\n          defaultValue={Nomc}\r\n          onChangeText={setNomc}/>   \r\n          <FormField\r\n          maxLength={8}\r\n          name=\"phonec\"\r\n          placeholder=\"Téléphone conjoin\"\r\n          defaultValue={Telc}\r\n          onChangeText={setTelc}          \r\n          />      \r\n        <SubmitButton title= {op} />\r\n      </Form>\r\n    \r\n  );\r\n\r\n\r\n\r\n}\r\nexport default Updat_par;"]},"metadata":{},"sourceType":"module"}