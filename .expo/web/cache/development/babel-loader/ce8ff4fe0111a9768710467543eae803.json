{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mohamed\\\\Desktop\\\\PROJET_PFE\\\\PFE\\\\app\\\\screens\\\\ListingsScreen.js\";\nimport React, { useEffect } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"../components/ActivityIndicator\";\nimport Button from \"../components/Button\";\nimport Card from \"../components/Card\";\nimport colors from \"../config/colors\";\nimport listingsApi from \"../api/listings\";\nimport routes from \"../navigation/routes\";\nimport Screen from \"../components/Screen\";\nimport AppText from \"../components/Text\";\nimport useApi from \"../hooks/useApi\";\n\nfunction ListingsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var getListingsApi = useApi(listingsApi.getListings);\n  useEffect(function () {\n    getListingsApi.request();\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(ActivityIndicator, {\n    visible: getListingsApi.loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), React.createElement(Screen, {\n    style: styles.screen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, getListingsApi.error && React.createElement(React.Fragment, null, React.createElement(AppText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"Couldn't retrieve the listings.\"), React.createElement(Button, {\n    title: \"Retry\",\n    onPress: getListingsApi.request,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  })), React.createElement(FlatList, {\n    data: getListingsApi.data,\n    keyExtractor: function keyExtractor(listing) {\n      return listing.id.toString();\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Card, {\n        title: item.title,\n        subTitle: \"$\" + item.price,\n        imageUrl: item.images[0].url,\n        onPress: function onPress() {\n          return navigation.navigate(routes.LISTING_DETAILS, item);\n        },\n        thumbnailUrl: item.images[0].thumbnailUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  screen: {\n    padding: 20,\n    backgroundColor: colors.light\n  }\n});\nexport default ListingsScreen;","map":{"version":3,"sources":["C:/Users/Mohamed/Desktop/PROJET_PFE/PFE/app/screens/ListingsScreen.js"],"names":["React","useEffect","ActivityIndicator","Button","Card","colors","listingsApi","routes","Screen","AppText","useApi","ListingsScreen","navigation","getListingsApi","getListings","request","loading","styles","screen","error","data","listing","id","toString","item","title","price","images","url","navigate","LISTING_DETAILS","thumbnailUrl","StyleSheet","create","padding","backgroundColor","light"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAGA,OAAOC,iBAAP;AACA,OAAOC,MAAP;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,WAAP;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,OAAP;AACA,OAAOC,MAAP;;AAEA,SAASC,cAAT,OAAwC;AAAA,MAAdC,UAAc,QAAdA,UAAc;AACtC,MAAMC,cAAc,GAAGH,MAAM,CAACJ,WAAW,CAACQ,WAAb,CAA7B;AAEAb,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,cAAc,CAACE,OAAf;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,0CACE,oBAAC,iBAAD;AAAmB,IAAA,OAAO,EAAEF,cAAc,CAACG,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEC,MAAM,CAACC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,cAAc,CAACM,KAAf,IACC,0CACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAsB,IAAA,OAAO,EAAEN,cAAc,CAACE,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFJ,EAOE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEF,cAAc,CAACO,IADvB;AAEE,IAAA,YAAY,EAAE,sBAACC,OAAD;AAAA,aAAaA,OAAO,CAACC,EAAR,CAAWC,QAAX,EAAb;AAAA,KAFhB;AAGE,IAAA,UAAU,EAAE;AAAA,UAAGC,IAAH,SAAGA,IAAH;AAAA,aACV,oBAAC,IAAD;AACE,QAAA,KAAK,EAAEA,IAAI,CAACC,KADd;AAEE,QAAA,QAAQ,EAAE,MAAMD,IAAI,CAACE,KAFvB;AAGE,QAAA,QAAQ,EAAEF,IAAI,CAACG,MAAL,CAAY,CAAZ,EAAeC,GAH3B;AAIE,QAAA,OAAO,EAAE;AAAA,iBAAMhB,UAAU,CAACiB,QAAX,CAAoBtB,MAAM,CAACuB,eAA3B,EAA4CN,IAA5C,CAAN;AAAA,SAJX;AAKE,QAAA,YAAY,EAAEA,IAAI,CAACG,MAAL,CAAY,CAAZ,EAAeI,YAL/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADU;AAAA,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAFF,CADF;AA0BD;;AAED,IAAMd,MAAM,GAAGe,UAAU,CAACC,MAAX,CAAkB;AAC/Bf,EAAAA,MAAM,EAAE;AACNgB,IAAAA,OAAO,EAAE,EADH;AAENC,IAAAA,eAAe,EAAE9B,MAAM,CAAC+B;AAFlB;AADuB,CAAlB,CAAf;AAOA,eAAezB,cAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { FlatList, StyleSheet } from \"react-native\";\n\nimport ActivityIndicator from \"../components/ActivityIndicator\";\nimport Button from \"../components/Button\";\nimport Card from \"../components/Card\";\nimport colors from \"../config/colors\";\nimport listingsApi from \"../api/listings\";\nimport routes from \"../navigation/routes\";\nimport Screen from \"../components/Screen\";\nimport AppText from \"../components/Text\";\nimport useApi from \"../hooks/useApi\";\n\nfunction ListingsScreen({ navigation }) {\n  const getListingsApi = useApi(listingsApi.getListings);\n\n  useEffect(() => {\n    getListingsApi.request();\n  }, []);\n\n  return (\n    <>\n      <ActivityIndicator visible={getListingsApi.loading} />\n      <Screen style={styles.screen}>\n        {getListingsApi.error && (\n          <>\n            <AppText>Couldn't retrieve the listings.</AppText>\n            <Button title=\"Retry\" onPress={getListingsApi.request} />\n          </>\n        )}\n        <FlatList\n          data={getListingsApi.data}\n          keyExtractor={(listing) => listing.id.toString()}\n          renderItem={({ item }) => (\n            <Card\n              title={item.title}\n              subTitle={\"$\" + item.price}\n              imageUrl={item.images[0].url}\n              onPress={() => navigation.navigate(routes.LISTING_DETAILS, item)}\n              thumbnailUrl={item.images[0].thumbnailUrl}\n            />\n          )}\n        />\n      </Screen>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  screen: {\n    padding: 20,\n    backgroundColor: colors.light,\n  },\n});\n\nexport default ListingsScreen;\n"]},"metadata":{},"sourceType":"module"}